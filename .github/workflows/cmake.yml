name: CMake

on:
  push:
    branches: [ master, feature/gh-actions, feature/compositor-ng ]
  pull_request:
    branches: [ master, feature/gh-actions, feature/compositor-ng ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
jobs:
  pi4:
    name: Build and Test on Raspberry Pi 4
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner:
          - ARM
          - ARM64
        enable-vulkan:
          - 'on'
          - 'off'
        compiler:
          - gcc
          - clang
        include:
          - enable-vulkan: 'on'
            vulkan-deps: 'libvulkan-dev'
          
          - compiler: 'clang'
            clang-deps: 'clang'
    steps:
      # On the self-hosted runners, we assume those are already installed.
      # - name: Install dependencies
      #   run: |
      #     id
      #     sudo apt-get install -y \
      #       git cmake libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev \
      #       ttf-mscorefonts-installer fontconfig libsystemd-dev libinput-dev libudev-dev \
      #       libxkbcommon-dev ninja-build libgstreamer-plugins-base1.0-dev \
      #       ${{ matrix.vulkan-deps }} \
      #       ${{ matrix.clang-deps }}

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      
      - name: Show file tree
        run: |
          pwd
          tree -apugshDF

      - name: Configure CMake
        run: |
          cmake \
            -B ./build \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_C_COMPILER=${{ matrix.compiler }} }
            -DBUILD_GSTREAMER_AUDIO_PLAYER_PLUGIN=On \
            -DBUILD_GSTREAMER_VIDEO_PLAYER_PLUGIN=On \
            -DENABLE_VULKAN=${{ matrix.enable-vulkan }} \
            -DENABLE_TESTS=On \
            -GNinja

      - name: Build
        run: cmake --build ./build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
    
  container:
    name: Build & Test in Container
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
      env:
        DEBIAN_FRONTEND: noninteractive
    strategy:
      matrix:
        container:
          - 'debian:bullseye'
          - 'debian:buster'
        enable-vulkan:
          - 'on'
          - 'off'
        compiler:
          - clang
          - gcc
        include:
          - enable-vulkan: 'on'
            vulkan-deps: 'libvulkan-dev'
          
          - compiler: 'clang'
            clang-deps: 'clang'
    steps:
      # git needs to be installed before checking out, otherwise the checkout will fallback to the REST API,
      # and the submodule download won't work. 
      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y \
            git cmake libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev \
            fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev \
            libxkbcommon-dev ninja-build libgstreamer-plugins-base1.0-dev \
            ${{ matrix.vulkan-deps }} \
            ${{ matrix.clang-deps }}

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Configure CMake
        run: |
          cmake \
            -B ./build \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_C_COMPILER=${{ matrix.compiler }} \
            -DBUILD_GSTREAMER_AUDIO_PLAYER_PLUGIN=On \
            -DBUILD_GSTREAMER_VIDEO_PLAYER_PLUGIN=On \
            -DENABLE_VULKAN=${{ matrix.enable-vulkan }} \
            -DENABLE_TESTS=On \
            -GNinja

      - name: Build
        run: cmake --build ./build --config ${{ env.BUILD_TYPE}}

      - name: Test
        working-directory: build
        run: ctest -C ${{ env.BUILD_TYPE }} --output-on-failure
  