name: CMake

on:
  push:
    branches: [ master, feature/gh-actions, feature/compositor-ng ]
  pull_request:
    branches: [ master, feature/gh-actions, feature/compositor-ng ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    name: build (raspbian bullseye, pi4)

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: [linux, bullseye]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get install -y \
          git cmake libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev \
          ttf-mscorefonts-installer fontconfig libsystemd-dev libinput-dev libudev-dev \
          libxkbcommon-dev ninja-build libgstreamer-plugins-base1.0-dev

    - name: Configure CMake
      run: |
        cmake \
          -B ${{github.workspace}}/build \
          -DBUILD_GSTREAMER_AUDIO_PLAYER_PLUGIN=On \
          -DBUILD_GSTREAMER_VIDEO_PLAYER_PLUGIN=On \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -GNinja

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      if: false
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  build-bullseye-vulkan:
    name: build (debian bullseye, x64, with vulkan)
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y \
            git cmake libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev \
            fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev \
            libxkbcommon-dev ninja-build libgstreamer-plugins-base1.0-dev \
            libvulkan-dev

      - name: Configure CMake
        run: |
          cmake \
            -B ${{ github.workspace }}/build \
            -DBUILD_GSTREAMER_AUDIO_PLAYER_PLUGIN=On \
            -DBUILD_GSTREAMER_VIDEO_PLAYER_PLUGIN=On \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DENABLE_VULKAN=On \
            -GNinja

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      - name: Test
        if: false
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

  build-buster:
    name: build (debian buster, x64)
    runs-on: ubuntu-latest
    container:
      image: debian:buster
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y \
            git cmake libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev \
            fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev \
            libxkbcommon-dev ninja-build libgstreamer-plugins-base1.0-dev

      - name: Configure CMake
        run: |
          cmake \
            -B ${{ github.workspace }}/build \
            -DBUILD_GSTREAMER_AUDIO_PLAYER_PLUGIN=On \
            -DBUILD_GSTREAMER_VIDEO_PLAYER_PLUGIN=On \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -GNinja

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      - name: Test
        if: false
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}
  
  build-buster-vulkan:
    name: build (debian buster, x64, with vulkan)
    runs-on: ubuntu-latest
    container:
      image: debian:buster
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y \
            git cmake libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev \
            fonts-liberation fontconfig libsystemd-dev libinput-dev libudev-dev \
            libxkbcommon-dev ninja-build libgstreamer-plugins-base1.0-dev \
            libvulkan-dev

      - name: Configure CMake
        run: |
          cmake \
            -B ${{ github.workspace }}/build \
            -DBUILD_GSTREAMER_AUDIO_PLAYER_PLUGIN=On \
            -DBUILD_GSTREAMER_VIDEO_PLAYER_PLUGIN=On \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DENABLE_VULKAN=On \
            -GNinja

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      - name: Test
        if: false
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}
